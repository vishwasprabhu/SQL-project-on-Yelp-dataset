SELECT Count(b.id) AS Total_businesses, 
       Avg(b.review_count) AS Average_review, 
       SUM(b.review_count) AS total_reviews, 
       Avg(b.stars)        AS Avg_star, 
       CASE  /*For grouping the open and close using is_open*/
         WHEN b.is_open = 1 THEN 'Open' 
         WHEN b.is_open = 0 THEN 'Close' 
       END                 AS Open_Or_Close, 
       Avg(CASE    -- Case for sentiment analysis using keywords. It can be expanded further by reading through comments.
             WHEN r.text LIKE '%hate%' THEN -1    /* "-1" is for negative words in the review text*/
             WHEN r.text LIKE '%overprice%' THEN -1 
             WHEN r.text LIKE '%worst%' THEN -1 
             WHEN r.text LIKE '%bad%' THEN -1 
             WHEN r.text LIKE '%mistake%' THEN -1 
             WHEN r.text LIKE '%frustrate%' THEN -1 
             WHEN r.text LIKE '%broken%' THEN -1 
             WHEN r.text LIKE '%stink%' THEN -1 
             WHEN r.text LIKE '%kind%' THEN 1  /*"1" i for positive words in the review*/
             WHEN r.text LIKE '%great%' THEN 1 
             WHEN r.text LIKE '%love%' THEN 1 
             WHEN r.text LIKE '%fabulous%' THEN 1 
             WHEN r.text LIKE '%helpful%' THEN 1 
             WHEN r.text LIKE 'kind%' THEN 1 
             WHEN r.text LIKE '%welcome%' THEN 1 
             ELSE 0   /* "0" is if none of the words appear in the review text*/
           END)            AS average_sentiment  
FROM   business AS b 
       inner join review AS r 
               ON b.id = r.business_id 
GROUP  BY b.is_open 
